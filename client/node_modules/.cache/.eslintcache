[{"D:\\chatapp2\\client\\src\\index.js":"1","D:\\chatapp2\\client\\src\\App.js":"2","D:\\chatapp2\\client\\src\\components\\chatapp\\chatbox.js":"3","D:\\chatapp2\\client\\src\\components\\chatapp\\slidebar.js":"4","D:\\chatapp2\\client\\src\\components\\chatapp\\chatcontent.js":"5","D:\\chatapp2\\client\\src\\components\\chatapp\\context.js":"6","D:\\chatapp2\\client\\src\\components\\chatapp\\searchbox.js":"7","D:\\chatapp2\\client\\src\\components\\chatapp\\userinfor.js":"8","D:\\chatapp2\\client\\src\\components\\chatapp\\friendchatlist.js":"9","D:\\chatapp2\\client\\src\\components\\chatapp\\message.js":"10","D:\\chatapp2\\client\\src\\components\\chatapp\\typeslide.js":"11","D:\\chatapp2\\client\\src\\components\\chatapp\\chatinput.js":"12","D:\\chatapp2\\client\\src\\components\\chatapp\\chatboxinfor.js":"13","D:\\chatapp2\\client\\src\\components\\chatapp\\messageroombox.js":"14","D:\\chatapp2\\client\\src\\components\\chatapp\\friendlist.js":"15","D:\\chatapp2\\client\\src\\components\\chatapp\\avartar.js":"16","D:\\chatapp2\\client\\src\\components\\Login\\login.js":"17","D:\\chatapp2\\client\\src\\components\\Login\\loginform.js":"18","D:\\chatapp2\\client\\src\\components\\Login\\banner.js":"19","D:\\chatapp2\\client\\src\\components\\Login\\banner_circle_animation.js":"20"},{"size":136,"mtime":1630035538616,"results":"21","hashOfConfig":"22"},{"size":625,"mtime":1630053101833,"results":"23","hashOfConfig":"22"},{"size":1512,"mtime":1625415477423,"results":"24","hashOfConfig":"22"},{"size":1703,"mtime":1627310359768,"results":"25","hashOfConfig":"22"},{"size":4234,"mtime":1625761808756,"results":"26","hashOfConfig":"22"},{"size":201,"mtime":1625294546208,"results":"27","hashOfConfig":"22"},{"size":533,"mtime":1625761576473,"results":"28","hashOfConfig":"22"},{"size":1563,"mtime":1625483836968,"results":"29","hashOfConfig":"22"},{"size":6683,"mtime":1625670297484,"results":"30","hashOfConfig":"22"},{"size":2256,"mtime":1625761611178,"results":"31","hashOfConfig":"22"},{"size":1623,"mtime":1625406991374,"results":"32","hashOfConfig":"22"},{"size":1669,"mtime":1625664921740,"results":"33","hashOfConfig":"22"},{"size":450,"mtime":1625496393200,"results":"34","hashOfConfig":"22"},{"size":1533,"mtime":1627897065656,"results":"35","hashOfConfig":"22"},{"size":2213,"mtime":1625761486893,"results":"36","hashOfConfig":"22"},{"size":779,"mtime":1625496239677,"results":"37","hashOfConfig":"22"},{"size":267,"mtime":1630077641739,"results":"38","hashOfConfig":"22"},{"size":2083,"mtime":1630072532792,"results":"39","hashOfConfig":"22"},{"size":299,"mtime":1630120716935,"results":"40","hashOfConfig":"22"},{"size":3694,"mtime":1630135108177,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"i6pg1m",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\chatapp2\\client\\src\\index.js",[],["90","91"],"D:\\chatapp2\\client\\src\\App.js",["92","93","94"],"import { ChatApp } from './components/chatapp/chatbox'\r\nimport { Login } from './components/Login/login'\r\nimport {\r\n    BrowserRouter,\r\n    Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n  } from \"react-router-dom\";\r\nimport './app.css'\r\nfunction Hello() {\r\n    return <h1>Hello</h1>\r\n}\r\nfunction App() {\r\n    return (\r\n        // <ChatApp></ChatApp>\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path = \"/\" component = {ChatApp} exact />\r\n                <Route path = \"/login\" component = {Login} exact />\r\n            </Switch>\r\n          \r\n        </BrowserRouter>\r\n       \r\n    )\r\n}\r\n\r\nexport {App}","D:\\chatapp2\\client\\src\\components\\chatapp\\chatbox.js",["95"],"import { useContext, useEffect, useState } from \"react\";\r\nimport {SlideBar} from \"./slidebar\";\r\nimport {ChatContent} from \"./chatcontent\"\r\nimport {SizeScreenContext, ActiveChatContentMobileVersion} from \"./context\"\r\nfunction ChatApp() {\r\n    const TypeScreen = useContext(SizeScreenContext);\r\n    const [screenType, setScreenType] = useState(\"pc\");\r\n    const [showChatContentMobileVersion, setShowChatContentMobileVersion] = useState(false);\r\n    const checkType = () => {\r\n        if((window.innerWidth >= 610)\r\n            && screenType !== \"pc\") setScreenType(\"pc\")\r\n        else if((window.innerWidth < 610 )\r\n            && screenType !== \"mobile\") setScreenType(\"mobile\");\r\n    }\r\n    checkType();\r\n    useEffect(() => {\r\n       window.addEventListener('resize', checkType)\r\n    })\r\n    const controlMobileScreenChatContentfunc = () => {\r\n          setShowChatContentMobileVersion(true);\r\n    }\r\n    const activeSlideBar = () => {\r\n        setShowChatContentMobileVersion(false);\r\n    }\r\n    return (\r\n        <div style = {{overflow: \"hidden\", display: \"flex\", width: \"100%\"}}>\r\n        <SizeScreenContext.Provider value = {screenType} >\r\n            <ActiveChatContentMobileVersion.Provider value = {controlMobileScreenChatContentfunc}>\r\n                <SlideBar/>\r\n            </ActiveChatContentMobileVersion.Provider>\r\n            <ChatContent show = {showChatContentMobileVersion} backbtnactive = {activeSlideBar}/>\r\n        </SizeScreenContext.Provider>\r\n        </div>\r\n    )\r\n}\r\nexport {ChatApp}","D:\\chatapp2\\client\\src\\components\\chatapp\\slidebar.js",[],"D:\\chatapp2\\client\\src\\components\\chatapp\\chatcontent.js",[],"D:\\chatapp2\\client\\src\\components\\chatapp\\context.js",[],"D:\\chatapp2\\client\\src\\components\\chatapp\\searchbox.js",[],"D:\\chatapp2\\client\\src\\components\\chatapp\\userinfor.js",["96","97"],"import {useState} from 'react'\r\nimport \"./css/userinfor.css\"\r\nimport {Avartar} from \"./avartar\"\r\n\r\nconst FriendInvite = (props) => {\r\n    const [click, setClick] = useState(false);\r\n    if(props.typeSelect === \"message\" || props.typeSelect === \"messageactived\") {\r\n        if(!click) setClick(true)\r\n    } else {\r\n        if(click) setClick(false)\r\n    }\r\n    const styleOnClick = {\r\n        backgroundColor: \"#03bafc\",\r\n    }\r\n    const backgroundNumber = {\r\n        backgroundColor: \"black\"\r\n    }\r\n    return (\r\n        <div style = {(click ? styleOnClick : {})}  onClick = {\r\n            () => {\r\n                setClick(true);\r\n                if(props.typeSelect !== \"message\" && props.typeSelect !== \"messageactived\") {\r\n                    props.btnfunc(\"message\");\r\n                    setTimeout(() => {\r\n                        props.btnfunc(\"messageactived\")\r\n                    },200)\r\n                 }\r\n            }}>\r\n            <i  className = {\"fas fa-user-friends\"} >\r\n                \r\n            </i>\r\n            <div style = {(click ? backgroundNumber : {})}>\r\n                    <p>{props.number}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nfunction UserInfor (props) {\r\n    const [userName, setUserName] = useState(\"giang\");\r\n    const [friendInvite, setFriendInvite] = useState(5)\r\n    return (\r\n        <div>\r\n            <Avartar url = {\"\"} />\r\n            <h3>{userName}</h3>\r\n            <FriendInvite number = {friendInvite} btnfunc = {props.showMessageFunc} {...props} />\r\n        </div>\r\n    )\r\n}\r\nexport {UserInfor}","D:\\chatapp2\\client\\src\\components\\chatapp\\friendchatlist.js",["98","99"],"import React,{useState, useContext} from 'react'\r\nimport \"./css/friendchatlist.css\"\r\nimport { Avartar } from './avartar'\r\nimport { ActiveChatContentMobileVersion } from './context'\r\nconst test = [\r\n    {\r\n        id : 1213123,\r\n        urlavatar: \"\",\r\n        tittle: \"Hello Giang\",\r\n        online : true,\r\n        lastmessage : {\r\n            id: 121121,\r\n            user: \"Yasua\",\r\n            content: \"hello giangsddsdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddffffffffffff\",\r\n            date : \"10h30 PM\"\r\n        }\r\n    },\r\n    {\r\n        id : 1213123,\r\n        urlavatar: \"\",\r\n        tittle: \"Hello Giang\",\r\n        online : true,\r\n        lastmessage : {\r\n            id: 121121,\r\n            user: \"Yasua\",\r\n            content: \"hello giangsddsdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddffffffffffff\",\r\n            date : \"10h30 PM\"\r\n        }\r\n    },\r\n    {\r\n        id : 1213123,\r\n        urlavatar: \"\",\r\n        tittle: \"Hello Giang\",\r\n        online : true,\r\n        lastmessage : {\r\n            id: 121121,\r\n            user: \"Yasua\",\r\n            content: \"hello giangsddsdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddffffffffffff\",\r\n            date : \"10h30 PM\"\r\n        }\r\n    },\r\n    {\r\n        id : 1213123,\r\n        urlavatar: \"\",\r\n        tittle: \"Hello Giang\",\r\n        online : true,\r\n        lastmessage : {\r\n            id: 121121,\r\n            user: \"Yasua\",\r\n            content: \"hello giangsddsdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddffffffffffff\",\r\n            date : \"10h30 PM\"\r\n        }\r\n    },\r\n    {\r\n        id : 1213123,\r\n        urlavatar: \"\",\r\n        tittle: \"Hello Giang\",\r\n        online : true,\r\n        lastmessage : {\r\n            id: 121121,\r\n            user: \"Yasua\",\r\n            content: \"hello giangsddsdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddffffffffffff\",\r\n            date : \"10h30 PM\"\r\n        }\r\n    },\r\n    {\r\n        id : 1213123,\r\n        urlavatar: \"\",\r\n        tittle: \"Hello Giang\",\r\n        online : true,\r\n        lastmessage : {\r\n            id: 121121,\r\n            user: \"Yasua\",\r\n            content: \"hello giangsddsdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddffffffffffff\",\r\n            date : \"10h30 PM\"\r\n        }\r\n    },\r\n    {\r\n        id : 1213123,\r\n        urlavatar: \"\",\r\n        tittle: \"Hello Giang\",\r\n        online : true,\r\n        lastmessage : {\r\n            id: 121121,\r\n            user: \"Yasua\",\r\n            content: \"hello giangsddsdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddffffffffffff\",\r\n            date : \"10h30 PM\"\r\n        }\r\n    },\r\n    {\r\n        id : 1213123,\r\n        urlavatar: \"\",\r\n        tittle: \"Hello Giang\",\r\n        online : true,\r\n        lastmessage : {\r\n            id: 121121,\r\n            user: \"Yasua\",\r\n            content: \"hello giangsddsdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddffffffffffff\",\r\n            date : \"10h30 PM\"\r\n        }\r\n    },\r\n    {\r\n        id : 1213123,\r\n        urlavatar: \"\",\r\n        tittle: \"Hello Giang\",\r\n        online : true,\r\n        lastmessage : {\r\n            id: 121121,\r\n            user: \"Yasua\",\r\n            content: \"hello giangsddsdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddffffffffffff\",\r\n            date : \"10h30 PM\"\r\n        }\r\n    },\r\n    {\r\n        id : 1213123,\r\n        urlavatar: \"\",\r\n        tittle: \"Hello Giang\",\r\n        online : true,\r\n        lastmessage : {\r\n            id: 121121,\r\n            user: \"Yasua\",\r\n            content: \"hello giangsddsdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddffffffffffff\",\r\n            date : \"10h30 PM\"\r\n        }\r\n    },\r\n    {\r\n        id : 1213123,\r\n        urlavatar: \"\",\r\n        tittle: \"Hello Giang\",\r\n        online : true,\r\n        lastmessage : {\r\n            id: 121121,\r\n            user: \"Yasua\",\r\n            content: \"hello giangsddsdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddffffffffffff\",\r\n            date : \"10h30 PM\"\r\n        }\r\n    },\r\n    {\r\n        id : 1213123,\r\n        urlavatar: \"\",\r\n        tittle: \"Hello Giang\",\r\n        online : true,\r\n        lastmessage : {\r\n            id: 121121,\r\n            user: \"Yasua\",\r\n            content: \"hello giangsddsdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddffffffffffff\",\r\n            date : \"10h30 PM\"\r\n        }\r\n    },\r\n]\r\nconst Content_Style = {\r\n     whiteSpace: \"nowrap\",\r\n      textOverflow: \"ellipsis\",\r\n       overflow : \"hidden\"\r\n}\r\nlet ownStyle_friendchatlist = {\r\n    \r\n}\r\nfunction FriendChat(props) {\r\n    const showchatboxcontentfunc = useContext(ActiveChatContentMobileVersion);\r\n    return (\r\n        <article key = {props.id} onClick = {\r\n            () => {\r\n                showchatboxcontentfunc();\r\n            }\r\n        }>\r\n            <Avartar small url = {props.urlavatar} />\r\n            <div className = {\"tittle-contemtchat\"}>\r\n                <h3 className = {\"tittle\"}>{props.tittle}</h3>\r\n                <div className = {\"contentchat\"}>\r\n                    <p>{props.lastmessage.user +\":\"}</p>\r\n                    <p style = {Content_Style}>{props.lastmessage.content}</p>\r\n                    <p>{props.lastmessage.date}</p>\r\n                </div>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\nfunction FriendChatList (props) {\r\n    const [chatListInfo, setChatListInfo] = useState(test)\r\n    const [styleComponentInline, setStyleComponentInline] = useState(ownStyle_friendchatlist);\r\n    let typeComponent = {}\r\n    let animationactive = \"friend-chat-list\";\r\n    if (props.content === \"chat\"  ) {\r\n        animationactive = \"friend-chat-list active\";\r\n    }\r\n    else if(props.content ===\"chatactived\"\r\n    && styleComponentInline.zIndex !== \"1\") {\r\n        ownStyle_friendchatlist = {\r\n            zIndex: \"1\",\r\n            top: \"0%\"\r\n        }\r\n       setStyleComponentInline(ownStyle_friendchatlist)\r\n    }\r\n    else if(    props.content !== \"message\"\r\n    &&  props.content !== \"messageactived\"\r\n    &&  ownStyle_friendchatlist.zIndex === \"1\") {\r\n        setTimeout(\r\n            () => {\r\n                ownStyle_friendchatlist = {\r\n                };\r\n                setStyleComponentInline(ownStyle_friendchatlist);\r\n            }, 150)\r\n    }\r\n    return (\r\n        <div style = {styleComponentInline} className = {animationactive}>\r\n            {props.children}\r\n            {\r\n                chatListInfo.map(data => {\r\n                    return <FriendChat {...data} />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport {FriendChatList}","D:\\chatapp2\\client\\src\\components\\chatapp\\message.js",[],"D:\\chatapp2\\client\\src\\components\\chatapp\\typeslide.js",["100","101"],"import {useState} from 'react'\r\nimport \"./css/typeslide.css\"\r\n\r\nfunction TypeSlide(props) {\r\n    const [type, setType] = useState(\"chat\");\r\n    const [click, setClick] = useState(0);\r\n    if(props.typeSelect === \"message\") {\r\n        if(click !== -1) setClick(-1);\r\n    }\r\n    const clickChat = () => {\r\n        setClick(0)\r\n    }\r\n    const clickFriend = () => {\r\n        setClick(1)\r\n    }\r\n    return (\r\n        <div id = {\"type-slide\"}>\r\n            <div>\r\n                <h3 className = {(click === 0 ? \"active\" : \"\" )} style = {{textAlign: \"center\"}}\r\n                onClick = {() => {\r\n                    if(props.typeSelect !== \"chat\" && props.typeSelect !== \"chatactived\") {\r\n                        props.showChatboxfunc(\"chat\");\r\n                        setTimeout(() => {\r\n                            props.showChatboxfunc(\"chatactived\");\r\n                        },200)\r\n                        clickChat(0);\r\n                    }\r\n                }}>Chat</h3>\r\n            </div>\r\n            <div>\r\n                <h3 className = {(click === 1 ? \"active\" : \"\" )} style = {{textAlign: \"center\"}}\r\n                onClick = {() => {\r\n                    if(props.typeSelect !== \"friendlist\" && props.typeSelect !== \"friendlistactived\") {\r\n                        props.showChatboxfunc(\"friendlist\");\r\n                        setTimeout(() => {\r\n                            props.showChatboxfunc(\"friendlistactived\");\r\n                        },200)\r\n                    }\r\n                    clickFriend();\r\n                }}>Friend</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport {TypeSlide}","D:\\chatapp2\\client\\src\\components\\chatapp\\chatinput.js",["102"],"import { useState } from \"react\";\r\nimport \"./css/chatinput.css\"\r\nconst m_style = {\r\n \r\n    resize: \"none\",\r\n    // overflow: \"hidden\"\r\n}\r\nfunction ChatInput(props) {\r\n    const [chatcontent, setChatcontent] = useState(\"\");\r\n    function processSubmit() {\r\n        props.submitbtnfuc(chatcontent);\r\n    }\r\n    function press(e) {\r\n        if(e.charCode == 13 && !e.shiftKey) {\r\n            e.preventDefault();\r\n            if(e.target.value !== \"\")\r\n            props.submitbtnfuc(e.target.value);\r\n            e.target.value = \"\";\r\n            return true;\r\n        }\r\n    }\r\n    return (\r\n        <div   className = {\"chat-input\"} id = \"chat-content-input\">\r\n            <div>\r\n                <textarea onKeyPress = {(e) => press(e)} onSubmit = {(e) => {e.preventDefault()}} name = \"chatcontent\" onChange = {(e) => {\r\n                    setChatcontent(e.target.value);\r\n                    e.target.style.height = \"auto\";\r\n                    let temp = e.target.scrollHeight;\r\n                    if(temp > 100) {\r\n                        e.target.style.height = \"100px\"\r\n                        props.on_Resize(\"100% - 70px - 10px - 5px - 100px\")\r\n                    }\r\n                    else {\r\n                        e.target.style.height = `${temp}px`\r\n                        props.on_Resize(`100% - 70px - 10px - 5px - ${temp}px`)\r\n                    }\r\n                    console.log(e.target.style.height)\r\n                }} style = {m_style} ></textarea>\r\n                <button onClick = {processSubmit}>\r\n                    <i class=\"fas fa-share\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport {ChatInput}","D:\\chatapp2\\client\\src\\components\\chatapp\\chatboxinfor.js",[],"D:\\chatapp2\\client\\src\\components\\chatapp\\messageroombox.js",["103"],"import { useState, useEffect, useRef } from \"react\"\r\n\r\nimport \"./css/messageroombox.css\"\r\nimport \"./css/textmessage.css\"\r\n\r\nimport {Avartar} from \"./avartar\"\r\n\r\nfunction TextMessage(props) {\r\n    let _class_private = \"\";\r\n    if(props.isYou) {\r\n        _class_private = \"message-chat message-right\"\r\n        return (\r\n            <div style = {{width: \"100%\", overflow: \"hidden\"}} className = {_class_private}>\r\n                <div>\r\n                    {props.message}\r\n                </div>\r\n            </div>\r\n            )\r\n    }\r\n    else {\r\n        _class_private = \"message-chat message-left\"\r\n        return (\r\n            <div className = {_class_private}>\r\n                <Avartar small {...props} />\r\n                <p>\r\n                   {props.message}\r\n                </p>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nfunction MessageRoomBox (props) {\r\n    // console.log(props.data_in)\r\n    // const [data, setData] = useState(props.data_in);\r\n    // useEffect(() => {\r\n    //     setData(props.data_in)\r\n    // }, [props])\r\n    const texmessagebox = useRef(null);\r\n    useEffect(() => {\r\n            texmessagebox.current.scrollTop = texmessagebox.current.scrollHeight; \r\n    })\r\n    return (\r\n        <div ref = {texmessagebox} className = {\"message-room-box\"} style = {{height: `calc(${props.height})`}}>\r\n           {\r\n               props.data_in.map(Element => {\r\n                   return <TextMessage {...Element} />\r\n               })\r\n           }\r\n        </div>\r\n    )\r\n}\r\nexport {MessageRoomBox}","D:\\chatapp2\\client\\src\\components\\chatapp\\friendlist.js",[],"D:\\chatapp2\\client\\src\\components\\chatapp\\avartar.js",[],"D:\\chatapp2\\client\\src\\components\\Login\\login.js",[],"D:\\chatapp2\\client\\src\\components\\Login\\loginform.js",[],"D:\\chatapp2\\client\\src\\components\\Login\\banner.js",["104"],"D:\\chatapp2\\client\\src\\components\\Login\\banner_circle_animation.js",["105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":5,"column":5,"nodeType":"112","messageId":"113","endLine":5,"endColumn":11},{"ruleId":"110","severity":1,"message":"114","line":8,"column":5,"nodeType":"112","messageId":"113","endLine":8,"endColumn":9},{"ruleId":"110","severity":1,"message":"115","line":11,"column":10,"nodeType":"112","messageId":"113","endLine":11,"endColumn":15},{"ruleId":"110","severity":1,"message":"116","line":6,"column":11,"nodeType":"112","messageId":"113","endLine":6,"endColumn":21},{"ruleId":"110","severity":1,"message":"117","line":39,"column":22,"nodeType":"112","messageId":"113","endLine":39,"endColumn":33},{"ruleId":"110","severity":1,"message":"118","line":40,"column":26,"nodeType":"112","messageId":"113","endLine":40,"endColumn":41},{"ruleId":"110","severity":1,"message":"119","line":180,"column":26,"nodeType":"112","messageId":"113","endLine":180,"endColumn":41},{"ruleId":"110","severity":1,"message":"120","line":182,"column":9,"nodeType":"112","messageId":"113","endLine":182,"endColumn":22},{"ruleId":"110","severity":1,"message":"121","line":5,"column":12,"nodeType":"112","messageId":"113","endLine":5,"endColumn":16},{"ruleId":"110","severity":1,"message":"122","line":5,"column":18,"nodeType":"112","messageId":"113","endLine":5,"endColumn":25},{"ruleId":"123","severity":1,"message":"124","line":14,"column":23,"nodeType":"125","messageId":"126","endLine":14,"endColumn":25},{"ruleId":"110","severity":1,"message":"127","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":9,"column":13,"nodeType":"130","messageId":"131","endLine":9,"endColumn":40},{"ruleId":"132","severity":1,"message":"133","line":118,"column":7,"nodeType":"134","endLine":118,"endColumn":9,"suggestions":"135"},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Hello' is defined but never used.","'TypeScreen' is assigned a value but never used.","'setUserName' is assigned a value but never used.","'setFriendInvite' is assigned a value but never used.","'setChatListInfo' is assigned a value but never used.","'typeComponent' is assigned a value but never used.","'type' is assigned a value but never used.","'setType' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","react/jsx-pascal-case","Imported JSX component Banner_Circle_Animation must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Animate', 'Init', 'canvasSize.height', 'canvasSize.width', and 'mouse'. Either include them or remove the dependency array.","ArrayExpression",["138"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [Animate, Init, canvasSize.height, canvasSize.width, mouse]",{"range":"141","text":"142"},[3582,3584],"[Animate, Init, canvasSize.height, canvasSize.width, mouse]"]