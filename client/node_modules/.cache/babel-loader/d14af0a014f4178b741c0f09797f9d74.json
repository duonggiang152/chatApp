{"ast":null,"code":"var _jsxFileName = \"D:\\\\chatapp2\\\\client\\\\src\\\\components\\\\Login\\\\banner_circle_animation.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport { useRef } from 'react';\n\nconst Banner_Circle_Animation = props => {\n  _s();\n\n  const canvasRef = useRef(null);\n  const canvasSize = {\n    width: 250,\n    height: 250\n  }; // partical\n\n  function Particle(x, y, radius, color, context) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.color = color;\n\n    this.update = () => {\n      this.draw();\n    };\n\n    this.draw = () => {\n      context.beginPath();\n      context.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n      context.fillStyle = this.color;\n      context.fill();\n      context.closePath();\n    };\n  }\n\n  ;\n  let particals;\n\n  const Init = canvas => {\n    particals = [];\n\n    for (let i = 0; i < 1; i++) {\n      particals.push(new Particle(250 / 2, 250 / 2, 5, \"blue\", canvas));\n    }\n\n    console.log(particals);\n  };\n\n  const Animate = canvas => {\n    particals.forEach(partical => {\n      console.log(partical.update());\n    });\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = canvasSize.width;\n    canvas.height = canvasSize.height;\n    const ctx = canvas.getContext('2d');\n    Init(ctx);\n    requestAnimationFrame(() => {\n      Animate(ctx);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Banner_Circle_Animation, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = Banner_Circle_Animation;\nexport default Banner_Circle_Animation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner_Circle_Animation\");","map":{"version":3,"sources":["D:/chatapp2/client/src/components/Login/banner_circle_animation.js"],"names":["useRef","useEffect","Banner_Circle_Animation","props","canvasRef","canvasSize","width","height","Particle","x","y","radius","color","context","update","draw","beginPath","arc","Math","PI","fillStyle","fill","closePath","particals","Init","canvas","i","push","console","log","Animate","forEach","partical","current","ctx","getContext","requestAnimationFrame"],"mappings":";;;AAAA,SAASA,MAAT,EAAkBC,SAAlB,QAAmC,OAAnC;;AAEA,SAAQD,MAAR,QAAqB,OAArB;;AACA,MAAME,uBAAuB,GAAIC,KAAD,IAAW;AAAA;;AACvC,QAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMK,UAAU,GAAG;AACfC,IAAAA,KAAK,EAAE,GADQ;AAEfC,IAAAA,MAAM,EAAE;AAFO,GAAnB,CAFuC,CAMvC;;AACA,WAASC,QAAT,CAAmBC,CAAnB,EAAsBC,CAAtB,EAAyBC,MAAzB,EAAiCC,KAAjC,EAAwCC,OAAxC,EAAgD;AAC5C,SAAKJ,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAcA,KAAd;;AACA,SAAKE,MAAL,GAAc,MAAM;AAChB,WAAKC,IAAL;AACH,KAFD;;AAGA,SAAKA,IAAL,GAAY,MAAM;AACdF,MAAAA,OAAO,CAACG,SAAR;AACAH,MAAAA,OAAO,CAACI,GAAR,CAAY,KAAKR,CAAjB,EAAoB,KAAKC,CAAzB,EAA4B,KAAKC,MAAjC,EAAyC,CAAzC,EAA4CO,IAAI,CAACC,EAAL,GAAU,CAAtD,EAAyD,KAAzD;AACAN,MAAAA,OAAO,CAACO,SAAR,GAAoB,KAAKR,KAAzB;AACAC,MAAAA,OAAO,CAACQ,IAAR;AACAR,MAAAA,OAAO,CAACS,SAAR;AACH,KAND;AAOH;;AAAA;AACD,MAAIC,SAAJ;;AACA,QAAMC,IAAI,GAAIC,MAAD,IAAY;AACrBF,IAAAA,SAAS,GAAG,EAAZ;;AACA,SAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA2B;AACvBH,MAAAA,SAAS,CAACI,IAAV,CAAe,IAAInB,QAAJ,CAAa,MAAM,CAAnB,EAAsB,MAAI,CAA1B,EAA6B,CAA7B,EAAgC,MAAhC,EAAwCiB,MAAxC,CAAf;AACH;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACH,GAND;;AAOA,QAAMO,OAAO,GAAIL,MAAD,IAAY;AACxBF,IAAAA,SAAS,CAACQ,OAAV,CAAkBC,QAAQ,IAAI;AAC1BJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAAClB,MAAT,EAAZ;AACH,KAFD;AAKH,GAND;;AAOAb,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMwB,MAAM,GAAGrB,SAAS,CAAC6B,OAAzB;AACAR,IAAAA,MAAM,CAACnB,KAAP,GAAeD,UAAU,CAACC,KAA1B;AACAmB,IAAAA,MAAM,CAAClB,MAAP,GAAgBF,UAAU,CAACE,MAA3B;AACA,UAAM2B,GAAG,GAAGT,MAAM,CAACU,UAAP,CAAkB,IAAlB,CAAZ;AACAX,IAAAA,IAAI,CAACU,GAAD,CAAJ;AACAE,IAAAA,qBAAqB,CAAC,MAAM;AACxBN,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAFoB,CAArB;AAGH,GATQ,EASP,EATO,CAAT;AAUA,sBACI;AAAQ,IAAA,GAAG,EAAI9B;AAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAnDD;;GAAMF,uB;;KAAAA,uB;AAoDN,eAAeA,uBAAf","sourcesContent":["import { useRef , useEffect } from 'react'\r\n\r\nexport {useRef} from 'react'\r\nconst Banner_Circle_Animation = (props) => {\r\n    const canvasRef = useRef(null)\r\n    const canvasSize = {\r\n        width: 250,\r\n        height: 250\r\n    }\r\n    // partical\r\n    function Particle (x, y, radius, color, context){\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color  = color;\r\n        this.update = () => {\r\n            this.draw()\r\n        }\r\n        this.draw = () => {\r\n            context.beginPath();\r\n            context.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false)\r\n            context.fillStyle = this.color;\r\n            context.fill();\r\n            context.closePath();\r\n        }\r\n    };\r\n    let particals;\r\n    const Init = (canvas) => {\r\n        particals = []\r\n        for(let i = 0; i < 1; i++) {\r\n            particals.push(new Particle(250 / 2, 250/2, 5, \"blue\", canvas));\r\n        }\r\n        console.log(particals)\r\n    }\r\n    const Animate = (canvas) => {\r\n        particals.forEach(partical => {\r\n            console.log(partical.update())\r\n        })\r\n       \r\n       \r\n    }\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        canvas.width = canvasSize.width;\r\n        canvas.height = canvasSize.height\r\n        const ctx = canvas.getContext('2d');\r\n        Init(ctx)\r\n        requestAnimationFrame(() => {\r\n            Animate(ctx)\r\n        })\r\n    },[])\r\n    return (\r\n        <canvas ref = {canvasRef}></canvas>\r\n    )\r\n}\r\nexport default Banner_Circle_Animation"]},"metadata":{},"sourceType":"module"}