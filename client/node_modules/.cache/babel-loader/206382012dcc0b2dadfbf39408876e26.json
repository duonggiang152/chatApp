{"ast":null,"code":"var _jsxFileName = \"D:\\\\chatapp2\\\\client\\\\src\\\\components\\\\Login\\\\banner_circle_animation.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport { useRef } from 'react';\n\nconst Banner_Circle_Animation = props => {\n  _s();\n\n  const canvasRef = useRef(null);\n  const canvasSize = {\n    width: 250,\n    height: 250\n  }; // color\n\n  const color = ['#e0a80d', '#bde00d', '#53e00d', '#0d26e0', '#7e0de0', '#e0a80d', '#bde00d', '#53e00d', '#0d26e0', '#7e0de0'];\n  let mouse = {\n    x: 0,\n    y: 0\n  }; // partical\n\n  function Particle(x, y, radius, color, context) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.color = color;\n    this.radians = Math.random() * Math.PI * 2;\n    this.velocity = 0.05;\n    this.distanceFromCenter = {\n      x: Math.random() * 10 + 50,\n      y: Math.random() * 10 + 50\n    };\n    this.lastmouse = {\n      x: x,\n      y: y\n    };\n\n    this.update = () => {\n      this.radians += this.velocity; // this.lastmouse.x += (mouse.x - this.lastmouse.x) * 0.05\n\n      this.x = (mouse.x === undefined ? x : mouse.x) + Math.cos(this.radians) * this.distanceFromCenter.x;\n      this.y = (mouse.y === undefined ? y : mouse.y) + Math.sin(this.radians) * this.distanceFromCenter.y;\n      this.draw();\n    };\n\n    this.draw = () => {\n      context.beginPath();\n      context.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n      context.fillStyle = this.color;\n      context.fill();\n      context.closePath();\n    };\n  }\n\n  ;\n  let particals;\n\n  const Init = canvas => {\n    particals = [];\n\n    for (let i = 0; i < 10; i++) {\n      particals.push(new Particle(250 / 2, 250 / 2, 10, color[i], canvas));\n    }\n  };\n\n  const Animate = ctx => {\n    ctx.fillStyle = 'rgba(0, 0 , 0, 0.05)';\n    ctx.fillRect(0, 0, canvasSize.width, canvasSize.height);\n    particals.forEach(partical => {\n      partical.update();\n    });\n    requestAnimationFrame(() => {\n      Animate(ctx);\n    });\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    window.addEventListener('mousemove', e => {\n      let temp = canvas.getBoundingClientRect();\n\n      if (e.x < temp.left || e.x > temp.right || e.y < temp.top || e.y > temp.bottom) {\n        console.log(\"ok\");\n        mouse.x = undefined;\n        mouse.y = undefined;\n      }\n    });\n    canvas.addEventListener('mousemove', e => {\n      console.log(canvas.left);\n      console.log(mouse);\n      mouse.x = e.x - canvas.getBoundingClientRect().left;\n      mouse.y = e.y - canvas.getBoundingClientRect().top;\n      console.log(mouse);\n    });\n    canvas.width = canvasSize.width;\n    canvas.height = canvasSize.height;\n    const ctx = canvas.getContext('2d');\n    Init(ctx);\n    Animate(ctx);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Banner_Circle_Animation, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = Banner_Circle_Animation;\nexport default Banner_Circle_Animation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner_Circle_Animation\");","map":{"version":3,"sources":["D:/chatapp2/client/src/components/Login/banner_circle_animation.js"],"names":["useRef","useEffect","Banner_Circle_Animation","props","canvasRef","canvasSize","width","height","color","mouse","x","y","Particle","radius","context","radians","Math","random","PI","velocity","distanceFromCenter","lastmouse","update","undefined","cos","sin","draw","beginPath","arc","fillStyle","fill","closePath","particals","Init","canvas","i","push","Animate","ctx","fillRect","forEach","partical","requestAnimationFrame","current","window","addEventListener","e","temp","getBoundingClientRect","left","right","top","bottom","console","log","getContext"],"mappings":"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","sourcesContent":["import { useRef , useEffect } from 'react'\r\n\r\nexport {useRef} from 'react'\r\nconst Banner_Circle_Animation = (props) => {\r\n    const canvasRef = useRef(null)\r\n    const canvasSize = {\r\n        width: 250,\r\n        height: 250\r\n    }\r\n    // color\r\n    const color = [\r\n        '#e0a80d',\r\n        '#bde00d',\r\n        '#53e00d',\r\n        '#0d26e0',\r\n        '#7e0de0',\r\n        '#e0a80d',\r\n        '#bde00d',\r\n        '#53e00d',\r\n        '#0d26e0',\r\n        '#7e0de0'\r\n    ]\r\n    let mouse = {\r\n        x : 0,\r\n        y : 0\r\n    } \r\n    // partical\r\n    function Particle (x, y, radius, color, context){\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color  = color;\r\n        this.radians = Math.random() * Math.PI * 2;\r\n        this.velocity = 0.05;\r\n        this.distanceFromCenter =  {\r\n            x: Math.random() * 10 + 50,\r\n            y: Math.random() * 10 + 50,\r\n        }\r\n        this.lastmouse = {\r\n            x : x,\r\n            y : y\r\n        }\r\n        this.update = () => {\r\n            this.radians += this.velocity;\r\n            // this.lastmouse.x += (mouse.x - this.lastmouse.x) * 0.05\r\n            this.x = (mouse.x === undefined ? x : mouse.x) + Math.cos(this.radians) * this.distanceFromCenter.x;\r\n            this.y = (mouse.y === undefined ? y : mouse.y) + Math.sin(this.radians) * this.distanceFromCenter.y;\r\n            this.draw()\r\n        }\r\n        this.draw = () => {\r\n            context.beginPath();\r\n            context.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false)\r\n            context.fillStyle = this.color;\r\n            context.fill();\r\n            context.closePath();\r\n        }\r\n    };\r\n    let particals;\r\n    const Init = (canvas) => {\r\n        particals = []\r\n        for(let i = 0; i < 10; i++) {\r\n            particals.push(new Particle(250 / 2, 250/2, 10, color[i], canvas));\r\n        }\r\n    }\r\n    const Animate = (ctx) => {\r\n       \r\n        ctx.fillStyle = 'rgba(0, 0 , 0, 0.05)'\r\n        ctx.fillRect(0, 0, canvasSize.width, canvasSize.height);\r\n        particals.forEach(partical => {\r\n            partical.update()\r\n        })\r\n        requestAnimationFrame(() => {\r\n           \r\n            Animate(ctx)\r\n            })\r\n       \r\n    }\r\n    useEffect(() => {\r\n        \r\n        const canvas = canvasRef.current;\r\n        window.addEventListener('mousemove', (e) => {\r\n            let temp = canvas.getBoundingClientRect()\r\n            if( e.x < temp.left   ||\r\n                e.x > temp.right  ||\r\n                e.y < temp.top    ||\r\n                e.y > temp.bottom) {\r\n                console.log(\"ok\")\r\n                mouse.x = undefined;\r\n                mouse.y = undefined;\r\n            }\r\n        }\r\n            \r\n        )\r\n        canvas.addEventListener('mousemove', (e) => {\r\n            console.log(canvas.left)\r\n            console.log(mouse)\r\n            mouse.x = e.x - canvas.getBoundingClientRect().left;\r\n            mouse.y = e.y - canvas.getBoundingClientRect().top;\r\n            console.log(mouse)\r\n        })\r\n        canvas.width = canvasSize.width;\r\n        canvas.height = canvasSize.height\r\n        const ctx = canvas.getContext('2d');\r\n        Init(ctx)\r\n        Animate(ctx)\r\n    },[])\r\n    return (\r\n        <canvas ref = {canvasRef}></canvas>\r\n    )\r\n}\r\nexport default Banner_Circle_Animation"]},"metadata":{},"sourceType":"module"}