{"ast":null,"code":"var _jsxFileName = \"D:\\\\chatapp2\\\\client\\\\src\\\\components\\\\Login\\\\banner_circle_animation.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport { useRef } from 'react';\n\nconst Banner_Circle_Animation = props => {\n  _s();\n\n  const canvasRef = useRef(null);\n  const canvasSize = {\n    width: 250,\n    height: 250\n  }; // partical\n\n  const Paricle = (x, y, radius, color, context) => {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.color = color;\n\n    this.update = () => {\n      this.draw();\n    };\n\n    this.draw = () => {\n      context.beginPath();\n      context.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n      context.fillStyle = this.color;\n      context.fill();\n      context.closePath();\n    };\n  };\n\n  let object;\n\n  const Init = () => {\n    object = [];\n\n    for (let i = 0; i < 400; i++) {\n      object.push(1);\n    }\n  };\n\n  const Animate = canvas => {\n    requestAnimationFrame(Animate);\n    Paricle(0, 0, 50, \"red\");\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = canvasSize.width;\n    canvas.height = canvasSize.height;\n    const ctx = canvas.getContext('2d');\n    Init();\n    Animate(ctx);\n  });\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Banner_Circle_Animation, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = Banner_Circle_Animation;\nexport default Banner_Circle_Animation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner_Circle_Animation\");","map":{"version":3,"sources":["D:/chatapp2/client/src/components/Login/banner_circle_animation.js"],"names":["useRef","useEffect","Banner_Circle_Animation","props","canvasRef","canvasSize","width","height","Paricle","x","y","radius","color","context","update","draw","beginPath","arc","Math","PI","fillStyle","fill","closePath","object","Init","i","push","Animate","canvas","requestAnimationFrame","current","ctx","getContext"],"mappings":";;;AAAA,SAASA,MAAT,EAAkBC,SAAlB,QAAmC,OAAnC;;AAEA,SAAQD,MAAR,QAAqB,OAArB;;AACA,MAAME,uBAAuB,GAAIC,KAAD,IAAW;AAAA;;AACvC,QAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMK,UAAU,GAAG;AACfC,IAAAA,KAAK,EAAE,GADQ;AAEfC,IAAAA,MAAM,EAAE;AAFO,GAAnB,CAFuC,CAMvC;;AACA,QAAMC,OAAO,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAOC,MAAP,EAAeC,KAAf,EAAsBC,OAAtB,KAAkC;AAC9C,SAAKJ,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAcA,KAAd;;AACA,SAAKE,MAAL,GAAc,MAAM;AAChB,WAAKC,IAAL;AACH,KAFD;;AAGA,SAAKA,IAAL,GAAY,MAAM;AACdF,MAAAA,OAAO,CAACG,SAAR;AACAH,MAAAA,OAAO,CAACI,GAAR,CAAY,KAAKR,CAAjB,EAAoB,KAAKC,CAAzB,EAA4B,KAAKC,MAAjC,EAAyC,CAAzC,EAA4CO,IAAI,CAACC,EAAL,GAAU,CAAtD,EAAyD,KAAzD;AACAN,MAAAA,OAAO,CAACO,SAAR,GAAoB,KAAKR,KAAzB;AACAC,MAAAA,OAAO,CAACQ,IAAR;AACAR,MAAAA,OAAO,CAACS,SAAR;AACH,KAND;AAOH,GAfD;;AAgBA,MAAIC,MAAJ;;AACA,QAAMC,IAAI,GAAG,MAAM;AACfD,IAAAA,MAAM,GAAG,EAAT;;AACA,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,GAAnB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBF,MAAAA,MAAM,CAACG,IAAP,CAAY,CAAZ;AACH;AACJ,GALD;;AAMA,QAAMC,OAAO,GAAIC,MAAD,IAAY;AACxBC,IAAAA,qBAAqB,CAACF,OAAD,CAArB;AACAnB,IAAAA,OAAO,CAAC,CAAD,EAAG,CAAH,EAAK,EAAL,EAAQ,KAAR,CAAP;AACH,GAHD;;AAIAP,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAM2B,MAAM,GAAGxB,SAAS,CAAC0B,OAAzB;AACAF,IAAAA,MAAM,CAACtB,KAAP,GAAeD,UAAU,CAACC,KAA1B;AACAsB,IAAAA,MAAM,CAACrB,MAAP,GAAgBF,UAAU,CAACE,MAA3B;AACA,UAAMwB,GAAG,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAZ;AACAR,IAAAA,IAAI;AACJG,IAAAA,OAAO,CAACI,GAAD,CAAP;AACH,GARQ,CAAT;AASA,sBACI;AAAQ,IAAA,GAAG,EAAI3B;AAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA9CD;;GAAMF,uB;;KAAAA,uB;AA+CN,eAAeA,uBAAf","sourcesContent":["import { useRef , useEffect } from 'react'\r\n\r\nexport {useRef} from 'react'\r\nconst Banner_Circle_Animation = (props) => {\r\n    const canvasRef = useRef(null)\r\n    const canvasSize = {\r\n        width: 250,\r\n        height: 250\r\n    }\r\n    // partical\r\n    const Paricle = (x, y, radius, color, context) => {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color  = color;\r\n        this.update = () => {\r\n            this.draw()\r\n        }\r\n        this.draw = () => {\r\n            context.beginPath();\r\n            context.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false)\r\n            context.fillStyle = this.color;\r\n            context.fill();\r\n            context.closePath();\r\n        }\r\n    };\r\n    let object;\r\n    const Init = () => {\r\n        object = []\r\n        for(let i = 0; i < 400; i++) {\r\n            object.push(1);\r\n        }\r\n    }\r\n    const Animate = (canvas) => {\r\n        requestAnimationFrame(Animate)\r\n        Paricle(0,0,50,\"red\")\r\n    }\r\n    useEffect(() => {\r\n       \r\n        const canvas = canvasRef.current;\r\n        canvas.width = canvasSize.width;\r\n        canvas.height = canvasSize.height\r\n        const ctx = canvas.getContext('2d');\r\n        Init()\r\n        Animate(ctx)\r\n    })\r\n    return (\r\n        <canvas ref = {canvasRef}></canvas>\r\n    )\r\n}\r\nexport default Banner_Circle_Animation"]},"metadata":{},"sourceType":"module"}